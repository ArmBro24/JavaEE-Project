spring.application.name=demo
server.port=8080
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/PaymentSB
spring.datasource.username=Arm
spring.datasource.password=1234
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
#logging.level.liquibase=DEBUG
spring.liquibase.enabled=true
spring.liquibase.default-schema=public

#Kafka Producer Configuration
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#Kafka Consumer Configuration (Fixes Serialization Issues)
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.demo.response
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.demo.response.BookingCreatedEvent
spring.kafka.consumer.properties.spring.deserialization.fail-on-unknown-properties=false
spring.kafka.consumer.properties.spring.deserialization.fail-on-missing-type-header=false
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=disable-consumer-groups

